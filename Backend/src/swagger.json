{
    "openapi": "3.0.0",
    "info": {
        "title": "GoGreen API",
        "version": "1.0.0",
        "description": "Documentation API of GoGreen Project"
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Operations about Authentication"
        },
        {
            "name": "Care",
            "description": "Operations about Tasks"
        },
        {
            "name": "Events",
            "description": "Operations about Events"
        },
        {
            "name": "guides",
            "description": "Operations about Guides"
        },
        {
            "name": "Nurseries",
            "description": "Operations about Nurseries"
        },
        {
            "name": "Users",
            "description": "Operations about Users & Admins and their tasks"
        },
        {
            "name": "Trees",
            "description": "Operations about Trees"
        },
        {
            "name": "Partners",
            "description": "Operations about Partners"
        },
        {
            "name": "Coupons",
            "description": "Operations about Coupon"
        },
        {
            "name": "Community",
            "description": "Operations about Reports, Comments , Responses"
        },
        {
            "name": "notifications",
            "description": "Operations about Notifications"
        },
        {
            "name": "Other",
            "description": "Operations about more than one thing or anything else that is not in the above categories"
        }
    ],
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": ["Auth"],
                "summary": "Register",
                "description": "Register a new user with username, email, and password.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example" : "Hagar Gamal",
                                        "length" : {"max" : 15, "min": 3}
                                    },
                                    "email": {
                                        "type": "string",
                                        "example" : "Hagarelessawy0@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example" : "123_456_789",
                                        "length" : {"min": 8}
                                    },
                                    "passwordConfirmation": {
                                        "type": "string",
                                        "example" : "123_456_789",
                                        "length" : {"min": 8}
                                    }
                                },
                                "required": ["username", "email", "password", "passwordConfirmation"]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "headers": {
                            "x-auth-token": {
                                "description": "Authentication token for the newly registered user",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "user_id": {
                                            "type": "string",
                                            "example": "674f5632e57414133c9499f9"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If the user enters an email that already exists, or the two passwords do not match, or enters something that conflicts with the validation rules.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email already exists"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": ["Auth"],
                "summary": "Login",
                "description": "Login user with email and password.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example" : "Hagarelessawy0@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example" : "123_456_789",
                                        "length" : {"min": 8}
                                    }
                                },
                                "required": ["email", "password"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "headers": {
                            "x-auth-token": {
                                "description": "Authentication token for the logged-in user",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successfully"
                                        },
                                        "user_id": {
                                            "type": "string",
                                            "example": "674f5632e57414133c9499f9"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Wrong email or password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Wrong password"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": ["Auth"],
                "summary": "Logout",
                "description": "Logs out current logged in user session by invalidating the token.",
                "security": [{
                    "bearerAuth": []
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token , Session expired or password recently changed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access - please log in"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/forgotPassword": {
            "post": {
                "tags": ["Auth"],
                "summary": "forgot password",
                "description": "Send a reset password link to the user's email.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "Hagarelessawy0@gmail.com"
                                    }
                                },
                                "required": ["email"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email sent successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "There is no user with this email"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "error sending email or invalid email format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email could not be sent - {err}"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/reset-password/{token}": {
            "post": {
                "tags": ["Auth"],
                "summary": "Reset Password",
                "description": "Reset user's password using the token sent to their email.",
                "parameters": [{
                    "name": "token",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "example" : "123456789",
                                        "length" : {"min": 8}
                                    },
                                    "passwordConfirmation": {
                                        "type": "string",
                                        "example" : "123456789",
                                        "length" : {"min": 8}
                                    }
                                },
                                "required": ["password", "passwordConfirmation"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid token or user not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid token"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Passwords do not match or are shorter than 8 characters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "passwords do not match"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "api/users/{id}/tree": {
            "get": {
                "tags": ["Care"],
                "summary": "Retrieve user trees",
                "description": "Retrieval of trees planted by the user",
                "security": [{
                    "bearerAuth": []
                }],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "example": "674f5632e57414133c9499f9"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object",
                                            "example": [
                                                {
                                                    "treeLocation": {
                                                        "latitude": 25,
                                                        "longitude": 26
                                                    },
                                                    "_id": "67978b5804bb6348dd0f63cf",
                                                    "healthStatus": "Diseased",
                                                    "problem": "testt",
                                                    "image": "../uploads/not-found-image.png",
                                                    "plantedRecently": true,
                                                    "byUser": "674f5632e57414133c9499f9",
                                                    "reportsAboutIt": [
                                                        "67978bb904bb6348dd0f63d4"
                                                    ],
                                                    "createdAt": "2025-01-27T13:34:16.460Z",
                                                    "updatedAt": "2025-01-27T17:15:22.357Z",
                                                    "__v": 6
                                                },
                                                {
                                                    "treeLocation": {
                                                        "latitude": 25,
                                                        "longitude": 26
                                                    },
                                                    "_id": "6797bb1235f66e923435a858",
                                                    "healthStatus": "Healthy",
                                                    "problem": "No problem",
                                                    "image": "../uploads/not-found-image.png",
                                                    "plantedRecently": true,
                                                    "byUser": "674f5632e57414133c9499f9",
                                                    "reportsAboutIt": [
                                                        "67978c5004bb6348dd0f63da",
                                                        "6797bf003ae87c7a8fcbf45c"
                                                    ],
                                                    "createdAt": "2025-01-27T16:57:54.282Z",
                                                    "updatedAt": "2025-01-27T17:15:21.935Z",
                                                    "__v": 2
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "if user Enters something that conflicts with the validation rules",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid User ID Format"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [ "Users" ],
                "summary": "Locate tree",
                "description": "Retrieve a list of all trees registered in the application in the form of pages. Each page displays 5 items. This is a temporary number. The number of items will be changed according to what we agree upon.",
                "security": [{
                    "bearerAuth": []
                }],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "example": "674f5632e57414133c9499f9"
                    }
                }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "location": {
                                        "type": "object",
                                        "properties": {
                                            "latitude": {
                                            "type": "number",
                                            "example": 25,
                                            "length": {"min": 22, "max": 35}
                                            },
                                            "longitude": {
                                                "type": "number",
                                                "example": 26,
                                                "length": {"min": 24, "max": 37}
                                            }
                                        }
                                        
                                    },
                                    "healthStatus": {
                                        "type": "string",
                                        "example": "Healthy",
                                        "enum": ["Healthy", "Diseased", "Dying"]
                                    },
                                    "problem": {
                                        "type": "string",
                                        "info": "It's required if healthStatus is Diseased or Dying",
                                        "default": "No problem"
                                    }
                                },
                                "required": ["location", "healthStatus"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Page number, number of elements in the page, and a list of trees with all their properties",
                        "content": {
                            "application/json": {
                                "example": {
                                    "length": 2,
                                    "page": 1,
                                    "trees": [
                                        {
                                            "treeLocation": {
                                                "latitude": 25,
                                                "longitude": 26
                                            },
                                            "_id": "67978b5804bb6348dd0f63cf",
                                            "healthStatus": "Diseased",
                                            "problem": "testt",
                                            "image": "../uploads/not-found-image.png",
                                            "plantedRecently": false,
                                            "byUser": "674f5632e57414133c9499f9",
                                            "reportsAboutIt": [
                                                "67978bb904bb6348dd0f63d4"
                                            ],
                                            "createdAt": "2025-01-27T13:34:16.460Z",
                                            "updatedAt": "2025-01-27T17:15:22.357Z",
                                            "__v": 6
                                        },
                                        {
                                            "treeLocation": {
                                                "latitude": 25,
                                                "longitude": 26
                                            },
                                            "_id": "6797bb1235f66e923435a858",
                                            "healthStatus": "Healthy",
                                            "problem": "No problem",
                                            "image": "../uploads/not-found-image.png",
                                            "plantedRecently": false,
                                            "byUser": "674f5632e57414133c9499f9",
                                            "reportsAboutIt": [
                                                "67978c5004bb6348dd0f63da",
                                                "6797bf003ae87c7a8fcbf45c"
                                            ],
                                            "createdAt": "2025-01-27T16:57:54.282Z",
                                            "updatedAt": "2025-01-27T17:15:21.935Z",
                                            "__v": 2
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If user enters something that conflicts with the validation rules",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Latitude must be between 22 and 32"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "summary": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403":{
                        "summary": "The user who requested is not the owner of the ID in the path or admin",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to perform this action"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "api/users/{id}/task": {
            "post":{
                "tags": ["Care"],
                "summary": "Add task",
                "description": "Add task in care page",
                "security": [{
                    "bearerAuth": []
                }],
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "674f5632e57414133c9499f9"
                        }
                }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Water the tree",
                                        "enum": ["Water the tree", "Prune dead branches", "Check for pests", "Fertilize the soil"]
                                    },
                                    "treeID": {
                                        "type": "string",
                                        "example" : "67978b5804bb6348dd0f63cf"
                                    }
                                },
                                "required": ["title", "treeID"]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task created successfully"
                                        },
                                        "task": {
                                            "type": "string",
                                            "example": "Water the tree"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If the user enters something that conflicts with the validation rules",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid task title"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found or tree not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403":{
                        "summary": "The user who requested is not the owner of the ID in the path or the tree or admin",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to perform this action"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["Care"],
                "summary": "Retrieve user tasks",
                "description": "Display the daily tasks for each tree, classified as completed or pending",
                "security": [{
                    "bearerAuth": []
                }],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "example": "674f5632e57414133c9499f9"
                    }
                }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "treeIDs": {
                                        "type": "array",
                                        "example" : ["6797bb1235f66e923435a858", "67978b5804bb6348dd0f63cf"]
                                    }
                                },
                                "required": ["treeIDs"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "treeID": {
                                                "type": "string",
                                                "description": "Unique identifier for the tree",
                                                "example": "67978b5804bb6348dd0f63cf"
                                            },
                                            "treeName": {
                                                "type": "string",
                                                "description": "Name of the tree",
                                                "example": "tree 1"
                                            },
                                            "pendingTasks": {
                                                "type": "array",
                                                "description": "List of pending tasks for the tree",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "_id": {
                                                            "type": "string",
                                                            "description": "Unique identifier for the task",
                                                            "example": "67a55b87a5cec1ecb8cdfd2c"
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "description": "Title of the task",
                                                            "example": "Prune dead branches"
                                                        },
                                                        "tree": {
                                                            "type": "object",
                                                            "description": "Tree associated with the task",
                                                            "properties": {
                                                                "_id": {
                                                                    "type": "string",
                                                                    "example": "67978b5804bb6348dd0f63cf"
                                                                },
                                                                "treeName": {
                                                                    "type": "string",
                                                                    "example": "tree 1"
                                                                }
                                                            }
                                                        },
                                                        "user": {
                                                            "type": "string",
                                                            "description": "User ID associated with the task",
                                                            "example": "674f5632e57414133c9499f9"
                                                        },
                                                        "date": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "description": "Date and time when the task is due",
                                                            "example": "2025-02-07T01:01:59.429Z"
                                                        },
                                                        "isDone": {
                                                            "type": "boolean",
                                                            "description": "Indicates whether the task is completed",
                                                            "example": false
                                                        },
                                                        "__v": {
                                                            "type": "integer",
                                                            "description": "Version key used by MongoDB",
                                                            "example": 0
                                                        }
                                                    }
                                                }
                                            },
                                            "completedTasks": {
                                                "type": "array",
                                                "description": "List of completed tasks for the tree",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "_id": {
                                                            "type": "string",
                                                            "description": "Unique identifier for the task",
                                                            "example": "67a55b87a5cec1ecb8cdfd2c"
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "description": "Title of the task",
                                                            "example": "Prune dead branches"
                                                        },
                                                        "tree": {
                                                            "type": "object",
                                                            "description": "Tree associated with the task",
                                                            "properties": {
                                                                "_id": {
                                                                    "type": "string",
                                                                    "example": "67978b5804bb6348dd0f63cf"
                                                                },
                                                                "treeName": {
                                                                    "type": "string",
                                                                    "example": "tree 1"
                                                                }
                                                            }
                                                        },
                                                        "user": {
                                                            "type": "string",
                                                            "description": "User ID associated with the task",
                                                            "example": "674f5632e57414133c9499f9"
                                                        },
                                                        "date": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "description": "Date and time when the task was completed",
                                                            "example": "2025-02-07T01:01:59.429Z"
                                                        },
                                                        "isDone": {
                                                            "type": "boolean",
                                                            "description": "Indicates whether the task is completed",
                                                            "example": true
                                                        },
                                                        "__v": {
                                                            "type": "integer",
                                                            "description": "Version key used by MongoDB",
                                                            "example": 0
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If something is entered that conflicts with the validation rules",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "If enter something that conflicts with the validation rules"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "summary": "User not found or tree not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403":{
                        "summary": "The user who requested is not the owner of the ID in the path or admin",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to perform this action"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tasks/{id}": {
            "post": {
                "tags": ["Care"],
                "summary": "Mark task",
                "description": "Mark task as done or cancel it",
                "security": [{
                    "bearerAuth": []
                }],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "example": "679d586f1ea9acf426404abc"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task marked as done successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "summary": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403":{
                        "summary": "The user who requested is not the owner of the task",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to perform this action"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Care"],
                "summary": "Delete task",
                "description": "Delete task",
                "security": [{
                    "bearerAuth": []
                }],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "example": "679d586f1ea9acf426404abc"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {    
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task deleted successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "summary": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403":{
                        "summary": "The user who requested is not the owner of the task",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to perform this action"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tasks/{id}/delete-all-tasks": {
            "delete": {
                "tags": ["Care"],
                "summary": "Delete all tasks of a tree",
                "description": "Delete all tasks of a tree",
                "security": [{
                    "bearerAuth": []
                }],
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "example": "679d586f1ea9acf426404abc"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {    
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tasks deleted successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "summary": "Tree not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tree not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403":{
                        "summary": "The user who requested is not the owner of the tree",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to perform this action"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search/home/{key}": {
            "get": {
                "tags": ["Other"],
                "summary": "Search home",
                "description": "Search for articles, events or Nurseries in the home",
                "security": [{
                    "bearerAuth": []
                }],
                "parameters": [{
                    "name": "key",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "example": "test"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "Articles": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "description": "Message indicating no articles found",
                                                    "example": "No article found"
                                                },
                                                {
                                                    "type": "array",
                                                    "description": "Array of article objects",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "articlePic": {
                                                                "type": "string",
                                                                "example": "../uploads/not-found-image.png"
                                                            },
                                                            "_id": {
                                                                "type": "string",
                                                                "example": "679c185b5996a56b2da3689f"
                                                            },
                                                            "articletitle": {
                                                                "type": "string",
                                                                "example": "how to care for a tree"
                                                            },
                                                            "content": {
                                                                "type": "string",
                                                                "example": "rrrrrrrrrrrrrrrrrrrrr"
                                                            },
                                                            "createdAt": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-01-31T00:24:59.736Z"
                                                            },
                                                            "__v": {
                                                                "type": "integer",
                                                                "example": 0
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "Events": {
                                            "oneOf": [
                                                {
                                                    "type": "array",
                                                    "description": "Array of event objects",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "location": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "latitude": {
                                                                        "type": "number",
                                                                        "example": 30
                                                                    },
                                                                    "longitude": {
                                                                        "type": "number",
                                                                        "example": 24
                                                                    }
                                                                }
                                                            },
                                                            "eventImage": {
                                                                "type": "string",
                                                                "example": "../uploads/not-found-image.png"
                                                            } ,
                                                            "_id": {
                                                                "type": "string",
                                                                "example": "672fc5bbfdc6d15f778e25d7"
                                                            },
                                                            "eventName": {
                                                                "type": "string",
                                                                "example": "spring"
                                                            },
                                                            "eventDate": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-12-31T22:00:00.000Z"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "description"
                                                            },
                                                            "eventStatus": {
                                                                "type": "string",
                                                                "example": "completed"
                                                            },
                                                            "organizedWithPartnerID": {
                                                                "type": "string",
                                                                "example": "6712c34869c17428b80a63c6"
                                                            },
                                                            "__v": {
                                                                "type": "integer",
                                                                "example": 3
                                                            },
                                                            "interestedIn": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "example": ["674f5632e57414133c9499f9"]
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "string",
                                                    "description": "Message indicating no events found",
                                                    "example": "No events found"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "summary": "No results found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No results found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "summary": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access - please log in"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search/community/{key}": {
            "get": {
                "tags": ["Other"],
                "summary": "Search community",
                "description": "Search for users or reports in the community",
                "security": [{
                    "bearerAuth": []
                }],
                "parameters": [{
                    "name": "key",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "example": "hagar"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "Users": {
                                            "oneOf": [
                                                {
                                                    "type": "array",
                                                    "description": "Array of user objects",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "_id": {
                                                                "type": "string",
                                                                "example": "674f5632e57414133c9499f9"
                                                            },
                                                            "username": {
                                                                "type": "string",
                                                                "example": "Hagar"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "hagarelessawy0@gamil.com"
                                                            },
                                                            "profilePic": {
                                                                "type": "string",
                                                                "example": "https://res.cloudinary.com/dvlao566z/image/upload/v1733439630/kjhjxq357ujwlaefpg53.jpg"
                                                            },
                                                            "points": {
                                                                "type": "number",
                                                                "example": 20
                                                            },
                                                            "pendingCoupons": {
                                                                "type": "number",
                                                                "example": 0
                                                            },
                                                            "role": {
                                                                "type": "string",
                                                                "example": "admin"
                                                            },
                                                            "createdAt": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-12-03T19:04:18.280Z"
                                                            },
                                                            "updatedAt": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-01-29T11:28:48.753Z"
                                                            },
                                                            "__v": {
                                                                "type": "number",
                                                                "example": 0
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "string",
                                                    "description": "Message indicating no users found",
                                                    "example": "No users found"
                                                }
                                            ]
                                        },
                                        "Reports": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "description": "Message indicating no reports found",
                                                    "example": "No reports found"
                                                },
                                                {
                                                    "type": "array",
                                                    "description": "Array of report objects",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "location": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "latitude": {
                                                                        "type": "number",
                                                                        "example": 27
                                                                    },
                                                                    "longitude": {
                                                                        "type": "number",
                                                                        "example": 24
                                                                    }
                                                                }
                                                            },
                                                            "_id": {
                                                                "type": "string",
                                                                "example": "67978c5004bb6348dd0f63da"
                                                            },
                                                            "reportType": {
                                                                "type": "string",
                                                                "enum": ["A tree needs care", "A place needs tree", "Other"],
                                                                "example": "A tree needs care"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "test2"
                                                            },
                                                            "images": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "example": "https://res.cloudinary.com/dvlao566z/image/upload/v1737987149/py1qurh4dfrpmk3ffdmt.png"
                                                                }
                                                            },
                                                            "createdBy": {
                                                                "type": "string",
                                                                "description": "user ID",
                                                                "example": "674f5632e57414133c9499f9"
                                                            },
                                                            "treeID": {
                                                                "type": "string",
                                                                "example": "6797bb1235f66e923435a858"
                                                            },
                                                            "upVotes": {
                                                                "type": "number",
                                                                "example": 1
                                                            },
                                                            "upVoters": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "description": "users ID",
                                                                    "example": "674f5632e57414133c9499f9"
                                                                }
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "enum": ["Pending", "In Progress", "Resolved", "Awaiting Verification"],
                                                                "example": "Pending"
                                                            },
                                                            "responses": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "example": "6798c650f0ddb44f0d7ef905"
                                                                }
                                                            },
                                                            "comments": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "example": "6797904c10d099e3275e0ba6"
                                                                }
                                                            },
                                                            "modificationHistory": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "oldData": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "reportType": {
                                                                                    "type": "string",
                                                                                    "example": "A tree needs care"
                                                                                },
                                                                                "description": {
                                                                                    "type": "string",
                                                                                    "example": "testttt2"
                                                                                },
                                                                                "location": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "latitude": {
                                                                                            "type": "number",
                                                                                            "example": 27
                                                                                        },
                                                                                        "longitude": {
                                                                                            "type": "number",
                                                                                            "example": 24
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "images": {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "type": "string",
                                                                                        "example": "https://res.cloudinary.com/dvlao566z/image/upload/v1737987149/py1qurh4dfrpmk3ffdmt.png"
                                                                                    }
                                                                                },
                                                                                "treeID": {
                                                                                    "type": "string",
                                                                                    "example": "67978b5804bb6348dd0f63cf"
                                                                                },
                                                                                "createdAt": {
                                                                                    "type": "string",
                                                                                    "format": "date-time",
                                                                                    "example": "2025-01-27T14:12:30.737Z"
                                                                                }
                                                                            }
                                                                        },
                                                                        "updatedAt": {
                                                                            "type": "string",
                                                                            "format": "date-time",
                                                                            "example": "2025-01-27T17:08:06.033Z"
                                                                        },
                                                                        "_id": {
                                                                            "type": "string",
                                                                            "example": "6797bd763ae87c7a8fcbf44f"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "createdAt": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-01-27T13:38:24.412Z"
                                                            },
                                                            "updatedAt": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-01-28T11:58:08.371Z"
                                                            },
                                                            "__v": {
                                                                "type": "number",
                                                                "example": 8
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "JWT token for authentication. Example: 'Bearer {token}'"
            }
        }
    }
}
